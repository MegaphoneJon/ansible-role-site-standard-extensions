- name: git pull
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ gitroot }}"
    track_submodules: no
  become: yes
  become_user: "{{ run_as_user }}"
  when: git_repo_name is not none
  tags: allavailableupgrades

- name: set git name
  git_config:
    name: user.name
    repo: "{{ gitroot }}"
    scope: global
    value: "{{ run_as_user }} on {{ inventory_hostname }}"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes' and env == 'Dev'

- name: set git email
  git_config:
    name: user.email
    repo: "{{ gitroot }}"
    scope: global
    value: 'none@megaphonetech.com'
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes' and env == 'Dev'

- name: Add Megaphone monitoring
  command: "git submodule add https://github.com/MegaphoneJon/com.megaphonetech.monitoring.git {{ civicrm_custom_path }}/extensions/com.megaphonetech.monitoring"
  args:
    chdir: "{{ webroot }}"
    creates: "{{ civicrm_custom_path }}/extensions/com.megaphonetech.monitoring"
  when: civicrm == 'Yes'
  become_user: "{{ run_as_user }}"

- name: Enable Megaphone monitoring
  shell: "PATH=$HOME/bin:$PATH;cv en monitoring --refresh"
  args:
    chdir: "{{ webroot }}"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes'

- name: git commit Megaphone monitoring
  command: "git commit -m 'Megaphone monitoring extension'"
  args:
    chdir: "{{ webroot }}"
  register: commit_result
  become: yes
  become_user: "{{ run_as_user }}"
  changed_when: commit_result.rc == 0
  failed_when: not(commit_result.rc == 0 or 'nothing to commit, working tree clean' in commit_result.stdout_lines)
  when: civicrm == 'Yes' and env == 'Dev'

- name: Add Habitat extension
  command: "git submodule add https://github.com/MegaphoneJon/habitat.git {{ civicrm_custom_path }}/extensions/habitat"
  args:
    chdir: "{{ webroot }}"
    creates: "{{ civicrm_custom_path }}/extensions/habitat"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes' and env == 'Dev'

- name: Enable Habitat
  shell: "PATH=$HOME/bin:$PATH;cv en habitat --refresh"
  args:
    chdir: "{{ webroot }}"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes'

- name: git commit Habitat
  command: "git commit -m 'Habitat extension'"
  args:
    chdir: "{{ webroot }}"
  register: commit_result
  become: yes
  become_user: "{{ run_as_user }}"
  changed_when: commit_result.rc == 0
  failed_when: not(commit_result.rc == 0 or 'nothing to commit, working tree clean' in commit_result.stdout_lines)
  when: civicrm == 'Yes' and env == 'Dev'

- name: Add habitat-wp
  command: "git submodule add https://github.com/MegaphoneJon/habitat-wp.git wp-content/plugins/habitat-wp"
  args:
    chdir: "{{ gitroot }}"
    creates: "{{ webroot }}/wp-content/plugins/habitat-wp"
  become_user: "{{ run_as_user }}"
  when: cms == 'WordPress' and env == 'Dev'

- name: habitat-wp is on "main" branch
  command: "git submodule set-branch --branch main habitat-wp"
  args:
    chdir: "{{ gitroot }}"
    creates: "{{ webroot }}/wp-content/plugins/habitat-wp"
  become_user: "{{ run_as_user }}"
  when: cms == 'WordPress' and env == 'Dev'

- name: Enable habitat-wp
  command: "wp plugin activate habitat-wp --path={{ webroot }}"
  become_user: "{{ run_as_user }}"
  when: cms == 'WordPress'

- name: git commit habitat-wp
  command: "git commit -m 'habitat-wp'"
  args:
    chdir: "{{ webroot }}"
  register: commit_result
  become: yes
  become_user: "{{ run_as_user }}"
  changed_when: commit_result.rc == 0
  failed_when: not(commit_result.rc == 0 or 'nothing to commit, working tree clean' in commit_result.stdout_lines)
  when: cms == 'WordPress' and env == 'Dev'

- name: Create a site-specific temp folder
  ansible.builtin.file:
    path: "/tmp/{{ bare_url | hash('md5') }}"
    state: directory
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes' and env == 'Dev'
  tags: allavailableupgrades

- name: Download allavailableupgrades
  ansible.builtin.get_url:
    url: https://lab.civicrm.org/extensions/allavailableupgrades/-/archive/master/allavailableupgrades-master.zip
    dest: "/tmp/{{ bare_url | hash('md5') }}/allavailableupgrades.zip"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes' and env == 'Dev'
  tags: allavailableupgrades

- name: unzip allavailableupgrades
  ansible.builtin.unarchive:
    remote_src: yes
    src: "/tmp/{{ bare_url | hash('md5') }}/allavailableupgrades.zip"
    dest: "{{ webroot }}/{{ civicrm_custom_path }}/extensions/"
    creates: "{{ webroot }}/{{ civicrm_custom_path }}/extensions/allavailableupgrades"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes' and env == 'Dev'
  tags: allavailableupgrades

- name: Check if allavailableupgrades is moved
  stat: 
    path: "{{ webroot }}/{{ civicrm_custom_path }}/extensions/allavailableupgrades-master"
  register: allavailableupgradesexists
  when: civicrm == 'Yes' and env == 'Dev'
  tags: allavailableupgrades

- name: Move allavailableupgrades
  command: "mv {{ webroot }}/{{ civicrm_custom_path }}/extensions/allavailableupgrades-master {{ webroot }}/{{ civicrm_custom_path }}/extensions/allavailableupgrades"
  when: civicrm == 'Yes' and env == 'Dev' and allavailableupgradesexists.stat.exists 
  tags: allavailableupgrades

- name: Enable allavailableupgrades
  shell: "PATH=$HOME/bin:$PATH;cv en allavailableupgrades --refresh"
  args:
    chdir: "{{ webroot }}"
  become_user: "{{ run_as_user }}"
  when: civicrm == 'Yes'
  tags: allavailableupgrades

- name: git add the plugin
  command: git add -v -A
  args:
    chdir: "{{ webroot }}"
  register: add_result
  become: yes
  become_user: "{{ run_as_user }}"
  changed_when: add_result.stdout != ''
  failed_when: add_result.stderr != ''
  tags: allavailableupgrades

- name: git commit allavailableupgrades
  command: "git commit -m 'allavailableupgrades extension'"
  args:
    chdir: "{{ webroot }}"
  register: commit_result
  become: yes
  become_user: "{{ run_as_user }}"
  changed_when: commit_result.rc == 0
  failed_when: not(commit_result.rc == 0 or 'nothing to commit, working tree clean' in commit_result.stdout_lines)
  when: civicrm == 'Yes' and env == 'Dev'
  tags: allavailableupgrades

- name: git push
  command: git push
  args:
    chdir: "{{ webroot }}"
  register: push_result_addl
  become: yes
  become_user: "{{ run_as_user }}"
  when: internal_repo == "1" and (git_repo_push_url is search("ssh://")) and civicrm == 'Yes' and env == 'Dev'
  changed_when: push_result_addl.rc == 0 and push_result_addl.stderr != 'Everything up-to-date'
  failed_when: not(push_result_addl.rc == 0)
  tags: allavailableupgrades
